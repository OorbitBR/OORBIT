var poolSize=0;function sysPool(t,e){return this.system._pool[t]||(this.system._pool[t]=new e),this.system._pool[t]}function pool(t,e){return this._pool[t]||(this._pool[t]=new e),this._pool[t]}class Pool{static init(t,{useSystem:e=!1}={}){e?(t.system||console.error("No system for system pool",t.attrName),t.system._pool||(t.system._pool={}),t.pool=sysPool):(t._pool={},t.pool=pool)}}function whenLoadedSingle(t,e){t.hasLoaded?e():t.addEventListener("loaded",e)}function whenLoadedAll(t,e){let i=t.map((()=>!1));for(let s=0;s<t.length;++s){let a=s;whenLoadedSingle(t[a],(()=>{i[a]=!0,i.every((t=>t))&&e()}))}}function awaitLoadingSingle(t){return new Promise(((e,i)=>whenLoadedSingle(t,e)))}async function awaitLoadingAll(t){for(let e of t)await awaitLoadingSingle(e)}Util={},Pool.init(Util),Util.applyMatrix=function(t,e){e.matrix.copy(t),t.decompose(e.position,e.rotation,e.scale)},Util.traverseCondition=function(t,e,i){if(e(t)){i(t);for(let s of t.children)this.traverseCondition(s,e,i)}},Util.positionObject3DAtTarget=function(t,e,{scale:i,transformOffset:s,transformRoot:a}={}){void 0===a&&(a=t.parent),e.updateMatrixWorld();let o=this.pool("dest",THREE.Matrix4);if(o.copy(e.matrixWorld),s){let t=this.pool("transformMat",THREE.Matrix4);t.makeTranslation(s.x,s.y,s.z),o.multiply(t)}if(i){let t=this.pool("scale",THREE.Vector3);t.setFromMatrixScale(o),t.set(i.x/t.x,i.y/t.y,i.z/t.z),o.scale(t)}let n=this.pool("inv",THREE.Matrix4);n.copy(a.matrixWorld).invert(),o.premultiply(n),Util.applyMatrix(o,t)},Util.whenLoaded=function(t,e){return Array.isArray(t)&&e?whenLoadedAll(t,e):Array.isArray(t)?awaitLoadingAll(t):e?whenLoadedSingle(t,e):awaitLoadingSingle(t)},Util.whenComponentInitialized=function(t,e,i){return t&&t.components[e]&&t.components[e].initialized?Promise.resolve(i?i():void 0):new Promise(((s,a)=>{if(t&&t.components[e]&&t.components[e].initialized)return Promise.resolve(i?i():void 0);let o=a=>{a.detail.name===e&&(t.removeEventListener("componentinitialized",o),i&&i(),s())};t.addEventListener("componentinitialized",o)}))};const PhysXUtil={object3DPhysXTransform:(()=>{let t=new THREE.Vector3,e=new THREE.Quaternion;return function(i){return i.getWorldPosition(t),i.getWorldQuaternion(e),{translation:{x:t.x,y:t.y,z:t.z},rotation:{w:e.w,x:e.x,y:e.y,z:e.z}}}})(),matrixToTransform:(()=>{let t=new THREE.Vector3,e=new THREE.Quaternion,i=new THREE.Vector3;new THREE.Matrix4,new THREE.Matrix4;return function(s){return s.decompose(t,e,i),{translation:{x:t.x,y:t.y,z:t.z},rotation:{w:e.w,x:e.x,y:e.y,z:e.z}}}})(),layersToMask:(()=>{let t=new THREE.Layers;return function(e){t.disableAll();for(let i of e)t.enable(parseInt(i));return t.mask}})(),axisArrayToEnums:function(t){let e=[];for(let i of t){if("swing"===i){e.push(PhysX.PxD6Axis.eSWING1),e.push(PhysX.PxD6Axis.eSWING2);continue}let t=`e${i.toUpperCase()}`;t in PhysX.PxD6Axis||console.warn(`Unknown axis ${i} (PxD6Axis::${t})`),e.push(PhysX.PxD6Axis[t])}return e}};let PhysX;AFRAME.registerSystem("physx",{schema:{delay:{default:5e3},throttle:{default:10},autoLoad:{default:!1},speed:{default:1},wasmUrl:{default:physxwasm},useDefaultScene:{default:!0},wrapBounds:{default:!1},groundCollisionLayers:{default:[2]},groundCollisionMask:{default:[1,2,3,4]},gravity:{type:"vec3",default:{x:0,y:-9.8,z:0}},stats:{type:"array",default:[]},debug:{default:!1}},init(){this.PhysXUtil=PhysXUtil,this.cumTimeEngine=0,this.cumTimeWrapper=0,this.tickCounter=0,this.objects=new Map,this.shapeMap=new Map,this.jointMap=new Map,this.boundaryShapes=new Set,this.worldHelper=new THREE.Object3D,this.el.object3D.add(this.worldHelper),this.tock=AFRAME.utils.throttleTick(this.tock,this.data.throttle,this),this.collisionObject={thisShape:null,otherShape:null,points:[],impulses:[],otherComponent:null};let t=document.createElement("a-entity");this.el.append(t),this.defaultTarget=t,this.initializePhysX=new Promise(((t,e)=>{this.fulfillPhysXPromise=t})),this.initStats(),this.el.addEventListener("inspectortoggle",(t=>{console.log("Inspector toggle",t),!0===t.detail&&(this.running=!1)}))},initStats(){if(this.statsToConsole=this.data.stats.includes("console"),this.statsToEvents=this.data.stats.includes("events"),this.statsToPanel=this.data.stats.includes("panel"),this.bodyTypeToStatsPropertyMap={static:"staticBodies",dynamic:"dynamicBodies",kinematic:"kinematicBodies"},this.statsToConsole||this.statsToEvents||this.statsToPanel){this.trackPerf=!0,this.tickCounter=0,this.statsTickData={},this.statsBodyData={};this.el.sceneEl.setAttribute("stats-collector","inEvent: physics-tick-data;\n                                             properties: engine, after, total;\n                                             outputFrequency: 100;\n                                             outEvent: physics-tick-summary;\n                                             outputs: percentile__50, percentile__90, max")}if(this.statsToPanel){const t=this.el.sceneEl,e="&nbsp&nbsp&nbsp";t.setAttribute("stats-panel",""),t.setAttribute("stats-group__bodies","label: Physics Bodies"),t.setAttribute("stats-row__b1","group: bodies;\n                                           event:physics-body-data;\n                                           properties: staticBodies;\n                                           label: Static"),t.setAttribute("stats-row__b2","group: bodies;\n                                           event:physics-body-data;\n                                           properties: dynamicBodies;\n                                           label: Dynamic"),t.setAttribute("stats-row__b3","group: bodies;\n                                           event:physics-body-data;\n                                           properties: kinematicBodies;\n                                           label: Kinematic"),t.setAttribute("stats-group__tick",`label: Physics Ticks: Median${e}90th%${e}99th%`),t.setAttribute("stats-row__1","group: tick; \n                                          event:physics-tick-summary; \n                                          properties: engine.percentile__50, \n                                                      engine.percentile__90, \n                                                      engine.max;\n                                          label: Engine"),t.setAttribute("stats-row__2","group: tick;\n                                          event:physics-tick-summary;\n                                          properties: after.percentile__50, \n                                                      after.percentile__90, \n                                                      after.max; \n                                          label: After"),t.setAttribute("stats-row__3","group: tick;\n                                          event:physics-tick-summary;\n                                          properties: total.percentile__50, \n                                                      total.percentile__90, \n                                                      total.max;\n                                          label: Total")}},findWasm(){return this.data.wasmUrl},async startPhysX(){this.running=!0;let t,e=this,i=new Promise(((e,i)=>t=e));PhysX=PHYSX({locateFile:()=>e.findWasm(),onRuntimeInitialized(){t()}}),PhysX instanceof Promise&&(PhysX=await PhysX),this.PhysX=PhysX,await i,e.startPhysXScene(),e.physXInitialized=!0,e.fulfillPhysXPromise(),e.el.emit("physx-started",{})},startPhysXScene(){console.info("Starting PhysX scene");const t=PhysX.PxCreateFoundation(PhysX.PX_PHYSICS_VERSION,new PhysX.PxDefaultAllocator,new PhysX.PxDefaultErrorCallback);this.foundation=t;const e=PhysX.PxSimulationEventCallback.implement({onContactBegin:(t,e,i,s)=>{let a=this.shapeMap.get(t.$$.ptr),o=this.shapeMap.get(e.$$.ptr);o!==a&&(a&&a.data.emitCollisionEvents&&(this.collisionObject.thisShape=t,this.collisionObject.otherShape=e,this.collisionObject.points=i,this.collisionObject.impulses=s,this.collisionObject.otherComponent=o,a.el.emit("contactbegin",this.collisionObject)),o&&o.data.emitCollisionEvents&&(this.collisionObject.thisShape=e,this.collisionObject.otherShape=t,this.collisionObject.points=i,this.collisionObject.impulses=s,this.collisionObject.otherComponent=a,o.el.emit("contactbegin",this.collisionObject)))},onContactEnd:(t,e)=>{let i=this.shapeMap.get(t.$$.ptr),s=this.shapeMap.get(e.$$.ptr);s!==i&&(i&&i.data.emitCollisionEvents&&(this.collisionObject.thisShape=t,this.collisionObject.otherShape=e,this.collisionObject.points=null,this.collisionObject.impulses=null,this.collisionObject.otherComponent=s,i.el.emit("contactend",this.collisionObject)),s&&s.data.emitCollisionEvents&&(this.collisionObject.thisShape=e,this.collisionObject.otherShape=t,this.collisionObject.points=null,this.collisionObject.impulses=null,this.collisionObject.otherComponent=i,s.el.emit("contactend",this.collisionObject)))},onContactPersist:()=>{},onTriggerBegin:()=>{},onTriggerEnd:()=>{},onConstraintBreak:t=>{let e=this.jointMap.get(t.$$.ptr);e&&e.el.emit("constraintbreak",{})}});let i=new PhysX.PxTolerancesScale;this.physics=PhysX.PxCreatePhysics(PhysX.PX_PHYSICS_VERSION,t,i,!1,null),PhysX.PxInitExtensions(this.physics,null),this.cooking=PhysX.PxCreateCooking(PhysX.PX_PHYSICS_VERSION,t,new PhysX.PxCookingParams(i));const s=PhysX.getDefaultSceneDesc(this.physics.getTolerancesScale(),0,e);this.scene=this.physics.createScene(s),this.setupDefaultEnvironment()},setupDefaultEnvironment(){this.defaultActorFlags=new PhysX.PxShapeFlags(PhysX.PxShapeFlag.eSCENE_QUERY_SHAPE.value|PhysX.PxShapeFlag.eSIMULATION_SHAPE.value),this.defaultFilterData=new PhysX.PxFilterData(PhysXUtil.layersToMask(this.data.groundCollisionLayers),PhysXUtil.layersToMask(this.data.groundCollisionMask),0,0),this.scene.setGravity(this.data.gravity),this.data.useDefaultScene&&(this.createGroundPlane(),this.createBoundingCylinder()),this.defaultTarget.setAttribute("physx-body","type","static")},createGroundPlane(){let t=new PhysX.PxPlaneGeometry,e=this.physics.createMaterial(.8,.8,.1);const i=this.physics.createShape(t,e,!1,this.defaultActorFlags);i.setQueryFilterData(this.defaultFilterData),i.setSimulationFilterData(this.defaultFilterData);let s=this.physics.createRigidStatic({translation:{x:0,y:0,z:-5},rotation:{w:.707107,x:0,y:0,z:.707107}});s.attachShape(i),this.scene.addActor(s,null),this.ground=s,this.rigidBody=s},createBoundingCylinder(){let t=new PhysX.PxPlaneGeometry,e=this.physics.createMaterial(.1,.1,.8),i=new THREE.Spherical;i.radius=30;let s=new THREE.Quaternion,a=new THREE.Vector3,o=new THREE.Euler;for(let n=0;n<16;++n){i.theta=2*n*Math.PI/16,a.setFromSphericalCoords(i.radius,i.theta,i.phi),a.x=-a.y,a.y=0,o.set(0,i.theta,0),s.setFromEuler(o);const r=this.physics.createShape(t,e,!1,this.defaultActorFlags);r.setQueryFilterData(this.defaultFilterData),r.setSimulationFilterData(this.defaultFilterData);const l={translation:{x:a.x,y:a.y,z:a.z},rotation:{w:s.w,x:s.x,y:s.y,z:s.z}};this.boundaryShapes.add(r.$$.ptr);let h=this.physics.createRigidStatic(l);h.attachShape(r),this.scene.addActor(h,null)}},async registerComponentBody(t,{type:e}){await this.initializePhysX;const i=PhysXUtil.object3DPhysXTransform(t.el.object3D);let s;s="dynamic"===e||"kinematic"===e?this.physics.createRigidDynamic(i):this.physics.createRigidStatic(i);let a=!0,o=!1,n=new PhysX.VectorPxReal;for(let e of t.createShapes(this.physics,this.defaultActorFlags))s.attachShape(e),isFinite(e.density)?(o=!0,n.push_back(e.density)):(a=!1,o&&console.warn("Densities not set for all shapes. Will use total mass instead.",t.el));"dynamic"!==e&&"kinematic"!==e||(a&&o?(console.log("Setting density vector",n),s.updateMassAndInertia(n)):s.setMassAndUpdateInertia(t.data.mass)),n.delete(),this.scene.addActor(s,null),this.objects.set(t.el.object3D,s),t.rigidBody=s},registerShape(t,e){this.shapeMap.set(t.$$.ptr,e)},registerJoint(t,e){this.jointMap.set(t.$$.ptr,e)},removeBody(t){let e=t.rigidBody;this.objects.delete(t.el.object3D),e.release()},tock(t,e){if(t<this.data.delay)return;if(this.physXInitialized||!this.data.autoLoad||this.running||this.startPhysX(),!this.physXInitialized)return;if(!this.running)return;const i=performance.now();this.scene.simulate(THREE.MathUtils.clamp(e*this.data.speed/1e3,0,.03*this.data.speed),!0),this.scene.fetchResults(!0);const s=performance.now();for(let[t,e]of this.objects){if("static"===t.el.components["physx-body"].data.type)continue;const i=e.getGlobalPose();this.worldHelper.position.copy(i.translation),this.worldHelper.quaternion.copy(i.rotation),t.getWorldScale(this.worldHelper.scale),Util.positionObject3DAtTarget(t,this.worldHelper)}if(this.trackPerf){const t=performance.now();this.statsTickData.engine=s-i,this.statsTickData.after=t-s,this.statsTickData.total=t-i,this.el.emit("physics-tick-data",this.statsTickData),this.tickCounter++,100===this.tickCounter&&(this.countBodies(),this.statsToConsole&&console.log("Physics tick stats:",this.statsData),(this.statsToEvents||this.statsToPanel)&&this.el.emit("physics-body-data",this.statsBodyData),this.tickCounter=0)}},countBodies(){const t=this.statsBodyData;t.staticBodies=0,t.kinematicBodies=0,t.dynamicBodies=0,this.objects.forEach(((e,i)=>{const s=i.el.components["physx-body"].data.type,a=this.bodyTypeToStatsPropertyMap[s];t[a]++}))}}),AFRAME.registerComponent("physx-material",{schema:{staticFriction:{default:.2},dynamicFriction:{default:.2},restitution:{default:.2},density:{type:"number",default:NaN},collisionLayers:{default:[1],type:"array"},collidesWithLayers:{default:[1],type:"array"},collisionGroup:{default:0},contactOffset:{default:-1},restOffset:{default:-1}}}),AFRAME.registerComponent("physx-body",{dependencies:["physx-material"],schema:{type:{default:"dynamic",oneOf:["dynamic","static","kinematic"]},mass:{default:1},angularDamping:{default:0},linearDamping:{default:0},emitCollisionEvents:{default:!1},highPrecision:{default:!1},shapeOffset:{type:"vec3",default:{x:0,y:0,z:0}},speculativeCCD:{default:!1}},events:{stateadded:function(t){"grabbed"===t.detail&&(this.toggleGravity(),this.rigidBody.setRigidBodyFlag(PhysX.PxRigidBodyFlag.eKINEMATIC,!0))},stateremoved:function(t){"grabbed"===t.detail&&(this.toggleGravity(),this.floating&&this.rigidBody.setLinearVelocity({x:0,y:0,z:0},!0),"kinematic"!==this.data.type&&this.rigidBody.setRigidBodyFlag(PhysX.PxRigidBodyFlag.eKINEMATIC,!1))},bbuttonup:function(t){this.toggleGravity()},componentchanged:function(t){"physx-material"===t.name&&this.el.emit("object3dset",{})},object3dset:function(t){if(this.rigidBody){for(let t of this.shapes)this.rigidBody.detachShape(t,!1);let t=!0,e=!1,i=new PhysX.VectorPxReal,s=this,a=this.data.type,o=this.rigidBody;for(let a of s.createShapes(this.system.physics,this.system.defaultActorFlags))o.attachShape(a),isFinite(a.density)?(e=!0,i.push_back(a.density)):(t=!1,e&&console.warn("Densities not set for all shapes. Will use total mass instead.",s.el));"dynamic"!==a&&"kinematic"!==a||(t&&e?(console.log("Setting density vector",i),o.updateMassAndInertia(i)):o.setMassAndUpdateInertia(s.data.mass))}},contactbegin:function(t){console.log("contact started");let e=t.detail.otherComponent.el;this.el.classList.contains("finger-collider")&&(this.el.parentElement.components.ccontrol.grabAnchor.emit("raycaster-intersection-filtered",{els:e}),e.hasAttribute("grabbable")&&e.getAttribute("physx-body").type),e.hasAttribute("collidable")&&e.emit("grab-start",{hand:t.target})},contactend:function(t){console.log("contact ended");let e=t.detail.otherComponent.el;this.el.classList.contains("finger-collider")&&this.el.parentElement.components.ccontrol.grabAnchor.emit("raycaster-intersection-cleared",{clearedEls:e}),e.hasAttribute("collidable")&&e.emit("grab-end",{hand:t.target})},changetype:function(){this.el.setAttribute("physx-body","type","kinematic"),this.wasDynamic=!0}},init(){this.system=this.el.sceneEl.systems.physx,this.physxRegisteredPromise=this.system.registerComponentBody(this,{type:this.data.type}),this.el.setAttribute("grab-options","scalable",!1),this.kinematicMove=this.kinematicMove.bind(this),this.el.sceneEl.systems["button-caster"]&&this.el.sceneEl.systems["button-caster"].install(["bbutton"]),this.physxRegisteredPromise.then((()=>this.update())),this.wasDynamic=!1},update(t){this.rigidBody&&("dynamic"===this.data.type&&(this.rigidBody.setAngularDamping(this.data.angularDamping),this.rigidBody.setLinearDamping(this.data.linearDamping),this.rigidBody.setRigidBodyFlag(PhysX.PxRigidBodyFlag.eKINEMATIC,!1),this.data.highPrecision&&(this.rigidBody.setSolverIterationCounts(4,2),this.rigidBody.setRigidBodyFlag(PhysX.PxRigidBodyFlag.eENABLE_CCD,!0)),this.data.speculativeCCD&&this.rigidBody.setRigidBodyFlag(PhysX.PxRigidBodyFlag.eENABLE_SPECULATIVE_CCD,!0)),t&&this.data.mass===t.mass||this.el.emit("object3dset",{}))},remove(){this.rigidBody&&this.system.removeBody(this)},createGeometry(t){if(t.el.hasAttribute("geometry")){let e=t.el.getAttribute("geometry");switch(e.primitive){case"sphere":let i=e.radius*this.el.object3D.scale.x;return this.system.data.debug&&!this.debug&&this.createDebugSphere(i),new PhysX.PxSphereGeometry(.98*i);case"box":let s=e.width/2*this.el.object3D.scale.x,a=e.height/2*this.el.object3D.scale.y,o=e.depth/2*this.el.object3D.scale.z;return this.system.data.debug&&!this.debug&&this.createDebugBox(s,a,o),new PhysX.PxBoxGeometry(s,a,o);default:this.createConvexMeshGeometry(t.el.getObject3D("mesh"))}}},addHelper(t){let e=document.createElement("a-entity");e.setObject3D("mesh",new THREE.AxesHelper(.2)),e.setAttribute("physx-no-collision",""),t.appendChild(e)},createDebugSphere(t){let e=document.createElement("a-sphere");e.setAttribute("radius",1.01*t),e.setAttribute("physx-no-collision",""),e.setAttribute("material",{wireframe:!0,color:"red"}),this.addHelper(e),this.el.appendChild(e),this.debug=!0},createDebugBox(t,e,i){let s=document.createElement("a-box");s.setAttribute("width",1.01*t),s.setAttribute("height",1.01*e),s.setAttribute("depth",1.01*i),s.setAttribute("physx-no-collision",""),s.setAttribute("material",{wireframe:!0,color:"red"}),this.addHelper(s),this.el.appendChild(s),this.debug=!0},createDebugHull(t){let e=document.createElement("a-entity");e.setObject3D("mesh",new THREE.BoxHelper(t.clone(),16711680)),this.addHelper(e),e.setAttribute("scale","1.01 1.01 1.01"),e.setAttribute("physx-no-collision",""),this.el.appendChild(e),this.debug=!0},createConvexMeshGeometry(t,e){let i=new PhysX.PxVec3Vector,s=t.geometry.attributes.position;if(!s)return;if(s.count<3)return;if(3!=s.itemSize)return;let a=new THREE.Vector3;if(e){let o=new THREE.Matrix4;t.updateMatrix(),o.copy(t.matrix);let n=t.parent;for(;n&&n!==e;)n.updateMatrix(),o.premultiply(n.matrix),n=n.parent;for(let t=0;t<s.count;++t)a.fromBufferAttribute(s,t),a.applyMatrix4(o),i.push_back(Object.assign({},a))}else for(let t=0;t<s.count;++t)a.fromBufferAttribute(s,t),i.push_back(Object.assign({},a));let o=new THREE.Vector3,n=e||t;n.updateMatrixWorld(),n.getWorldScale(o);let r=this.system.cooking.createConvexMesh(i,this.system.physics);return new PhysX.PxConvexMeshGeometry(r,new PhysX.PxMeshScale({x:o.x,y:o.y,z:o.z},{w:1,x:0,y:0,z:0}),new PhysX.PxConvexMeshGeometryFlags(PhysX.PxConvexMeshGeometryFlag.eTIGHT_BOUNDS.value))},createTriangleMeshGeometry(t,e){let i=new PhysX.PxVec3Vector,s=new PhysX.PxU32Vector,a=t.geometry.attributes.position;if(!a)return;if(a.count<3)return;if(3!=a.itemSize)return;let o=new THREE.Vector3;if(e){let s=new THREE.Matrix4;t.updateMatrix(),s.copy(t.matrix);let n=t.parent;for(;n&&n!==e;)n.updateMatrix(),s.premultiply(n.matrix),n=n.parent;for(let t=0;t<a.count;++t)o.fromBufferAttribute(a,t),o.applyMatrix4(s),i.push_back(Object.assign({},o))}else for(let t=0;t<a.count;++t)o.fromBufferAttribute(a,t),i.push_back(Object.assign({},o));for(let e=0;e<t.geometry.index.count;++e)s.push_back(t.geometry.index.array[e]);let n=new THREE.Vector3,r=e||t;r.updateMatrixWorld(),r.getWorldScale(n);let l=this.system.cooking.createTriMesh(i,s,this.system.physics);return new PhysX.PxTriangleMeshGeometry(l,new PhysX.PxMeshScale({x:n.x,y:n.y,z:n.z},{w:1,x:0,y:0,z:0}),new PhysX.PxMeshGeometryFlags(100))},createShape(t,e,i){let s=t.createMaterial(i.staticFriction,i.dynamicFriction,i.restitution),a=t.createShape(e,s,!1,this.system.defaultActorFlags);return a.setQueryFilterData(new PhysX.PxFilterData(PhysXUtil.layersToMask(i.collisionLayers),PhysXUtil.layersToMask(i.collidesWithLayers),i.collisionGroup,0)),a.setSimulationFilterData(new PhysX.PxFilterData(PhysXUtil.layersToMask(i.collisionLayers),PhysXUtil.layersToMask(i.collidesWithLayers),i.collisionGroup,0)),i.contactOffset>=0&&a.setContactOffset(i.contactOffset),i.restOffset>=0&&a.setRestOffset(i.restOffset),a.density=i.density,this.system.registerShape(a,this),a},createShapes(t){if(this.el.hasAttribute("geometry")){let e=this.createGeometry(this.el.object3D);if(!e)return;let i=this.el.components["physx-material"].data;return this.shapes=[this.createShape(t,e,i)],this.shapes}let e=[];return Util.traverseCondition(this.el.object3D,(t=>(!t.el||!t.el.hasAttribute("physx-no-collision"))&&(!(t.el&&!t.el.object3D.visible&&!t.el.hasAttribute("physx-hidden-collision"))&&(!(!t.visible&&t.el&&!t.el.hasAttribute("physx-hidden-collision"))&&(!t.userData||!t.userData.vartisteUI)))),(i=>{if(i.geometry){let s,a;if(s=this.createConvexMeshGeometry(i,this.el.object3D),!s)return void console.warn("Couldn't create geometry",i);a=i.el&&i.el.hasAttribute("physx-material")?i.el.getAttribute("physx-material"):this.el.components["physx-material"].data;let o=this.createShape(t,s,a);e.push(o)}})),this.shapes=e,e},toggleGravity(){this.rigidBody.setActorFlag(PhysX.PxActorFlag.eDISABLE_GRAVITY,!this.floating),this.floating=!this.floating},resetBodyPose(){this.rigidBody.setGlobalPose(PhysXUtil.object3DPhysXTransform(this.el.object3D),!0)},kinematicMove(){this.rigidBody.setKinematicTarget(PhysXUtil.object3DPhysXTransform(this.el.object3D))},tock(t,e){this.rigidBody&&"kinematic"===this.data.type&&!this.setKinematic&&(this.rigidBody.setRigidBodyFlag(PhysX.PxRigidBodyFlag.eKINEMATIC,!0),this.setKinematic=!0),this.rigidBody&&("kinematic"===this.data.type||this.el.is("grabbed"))&&this.kinematicMove()}}),AFRAME.registerComponent("physx-ring",{schema:{type:{default:"static",oneOf:["dynamic","static","kinematic"]},radius:{type:"number",default:20},height:{type:"number",default:3},segments:{type:"number",default:16,min:4},thetaLength:{type:"number",default:360},visible:{type:"boolean",default:!1}},init(){this.theta=this.data.thetaLength*Math.PI/180,this.perimeter=2*Math.PI*this.data.radius;for(let t=0;t<this.data.segments;t++)this.el.appendChild(this.createBox(t))},createBox:function(){let t=new THREE.Spherical,e=new THREE.Euler;return function(i){let s=document.createElement("a-box");return s.setAttribute("height",this.perimeter/this.data.segments),s.setAttribute("width",this.data.height),s.setAttribute("depth",.01),s.setAttribute("material","wireframe",!0),s.setAttribute("visible",this.data.visible),s.setAttribute("physx-body","type",this.data.type),t.radius=this.data.radius,t.theta=i*this.theta/this.data.segments,e.set(t.theta-1.57,0,0),s.object3D.position.setFromSphericalCoords(t.radius,t.theta,t.phi),s.object3D.quaternion.setFromEuler(e),s}}()}),AFRAME.registerComponent("physx-joint-driver",{dependencies:["physx-joint"],multiple:!0,schema:{axes:{type:"array",default:[]},stiffness:{default:1},damping:{default:1},forceLimit:{default:34028234663852886e22},useAcceleration:{default:!0},linearVelocity:{type:"vec3",default:{x:0,y:0,z:0}},angularVelocity:{type:"vec3",default:{x:0,y:0,z:0}},lockOtherAxes:{default:!1},slerpRotation:{default:!0}},events:{"physx-jointcreated":function(t){this.setJointDriver()}},init(){this.el.setAttribute("phsyx-custom-constraint","")},setJointDriver(){if(this.enumAxes||this.update(),"D6"!==this.el.components["physx-joint"].data.type)return void console.warn("Only D6 joint drivers supported at the moment");let t=this.el.sceneEl.systems.physx.PhysX;this.joint=this.el.components["physx-joint"].joint,this.data.lockOtherAxes&&(this.joint.setMotion(t.PxD6Axis.eX,t.PxD6Motion.eLOCKED),this.joint.setMotion(t.PxD6Axis.eY,t.PxD6Motion.eLOCKED),this.joint.setMotion(t.PxD6Axis.eZ,t.PxD6Motion.eLOCKED),this.joint.setMotion(t.PxD6Axis.eSWING1,t.PxD6Motion.eLOCKED),this.joint.setMotion(t.PxD6Axis.eSWING2,t.PxD6Motion.eLOCKED),this.joint.setMotion(t.PxD6Axis.eTWIST,t.PxD6Motion.eLOCKED));for(let e of this.enumAxes)this.joint.setMotion(e,t.PxD6Motion.eFREE);let e=new t.PxD6JointDrive;e.stiffness=this.data.stiffness,e.damping=this.data.damping,e.forceLimit=this.data.forceLimit,e.setAccelerationFlag(this.data.useAcceleration);for(let t of this.driveAxes)this.joint.setDrive(t,e);console.log("Setting joint driver",this.driveAxes,this.enumAxes),this.joint.setDrivePosition({translation:{x:0,y:0,z:0},rotation:{w:1,x:0,y:0,z:0}},!0),this.joint.setDriveVelocity(this.data.linearVelocity,this.data.angularVelocity,!0)},update(t){if(PhysX){this.enumAxes=[];for(let t of this.data.axes){if("swing"===t){this.enumAxes.push(PhysX.PxD6Axis.eSWING1),this.enumAxes.push(PhysX.PxD6Axis.eSWING2);continue}let e=`e${t.toUpperCase()}`;e in PhysX.PxD6Axis||console.warn(`Unknown axis ${t} (PxD6Axis::${e})`),this.enumAxes.push(PhysX.PxD6Axis[e])}this.driveAxes=[];for(let t of this.data.axes){if("swing"===t){this.data.slerpRotation?this.driveAxes.push(PhysX.PxD6Drive.eSLERP):this.driveAxes.push(PhysX.PxD6Drive.eSWING);continue}if("twist"===t&&this.data.slerpRotation){this.driveAxes.push(PhysX.PxD6Drive.eSLERP);continue}let e=`e${t.toUpperCase()}`;e in PhysX.PxD6Drive||console.warn(`Unknown axis ${t} (PxD6Axis::${e})`),this.driveAxes.push(PhysX.PxD6Drive[e])}}}}),AFRAME.registerComponent("physx-joint-constraint",{multiple:!0,schema:{lockedAxes:{type:"array",default:[]},constrainedAxes:{type:"array",default:[]},freeAxes:{type:"array",default:[]},linearLimit:{type:"vec2"},limitCone:{type:"vec2"},twistLimit:{type:"vec2"},damping:{default:0},restitution:{default:0},stiffness:{default:0}},events:{"physx-jointcreated":function(t){this.setJointConstraint()}},init(){this.el.setAttribute("phsyx-custom-constraint","")},setJointConstraint(){if("D6"!==this.el.components["physx-joint__r"].data.type)return void console.warn("Only D6 joint constraints supported at the moment");this.constrainedAxes||this.update();let t=this.el.components["physx-joint__r"].joint,e=()=>{let t=new PhysX.PxJointLinearLimitPair(new PhysX.PxTolerancesScale,this.data.linearLimit.x,this.data.linearLimit.y);return t.siffness=this.data.stiffness,t.damping=this.data.damping,t.restitution=this.data.restitution,t};for(let e of this.freeAxes)t.setMotion(e,PhysX.PxD6Motion.eFREE);for(let e of this.lockedAxes)t.setMotion(e,PhysX.PxD6Motion.eLOCKED);for(let i of this.constrainedAxes){if(i===PhysX.PxD6Axis.eX||i===PhysX.PxD6Axis.eY||i===PhysX.PxD6Axis.eZ){t.setMotion(i,PhysX.PxD6Motion.eLIMITED),t.setLinearLimit(i,e());continue}if(i===PhysX.eTWIST){t.setMotion(PhysX.PxD6Axis.eTWIST,PhysX.PxD6Motion.eLIMITED);let e=new PhysX.PxJointAngularLimitPair(this.data.limitTwist.x,this.data.limitTwist.y);e.stiffness=this.data.stiffness,e.damping=this.data.damping,e.restitution=this.data.restitution,t.setTwistLimit(e);continue}t.setMotion(i,PhysX.PxD6Motion.eLIMITED);let s=new PhysX.PxJointLimitCone(this.data.limitCone.x,this.data.limitCone.y);s.damping=this.data.damping,s.stiffness=this.data.stiffness,s.restitution=this.data.restitution,t.setSwingLimit(s)}},update(t){PhysX&&(this.constrainedAxes=PhysXUtil.axisArrayToEnums(this.data.constrainedAxes),this.lockedAxes=PhysXUtil.axisArrayToEnums(this.data.lockedAxes),this.freeAxes=PhysXUtil.axisArrayToEnums(this.data.freeAxes))}}),AFRAME.registerComponent("physx-joint",{multiple:!0,schema:{type:{default:"Spherical",oneOf:["Fixed","Spherical","Distance","Revolute","Prismatic","D6"]},target:{type:"selector"},breakForce:{type:"vec2",default:{x:-1,y:-1}},removeElOnBreak:{default:!1},collideWithTarget:{default:!1},softFixed:{default:!1}},events:{constraintbreak:function(t){this.data.removeElOnBreak&&this.el.remove()}},init(){this.system=this.el.sceneEl.systems.physx;let t=this.el;for(;t&&!t.hasAttribute("physx-body");)t=t.parentEl;t?(this.bodyEl=t,this.worldHelper=new THREE.Object3D,this.worldHelperParent=new THREE.Object3D,this.el.sceneEl.object3D.add(this.worldHelperParent),this.targetScale=new THREE.Vector3(1,1,1),this.worldHelperParent.add(this.worldHelper),this.data.target||(this.data.target=this.system.defaultTarget),Util.whenLoaded([this.el,this.bodyEl,this.data.target],(()=>{this.createJoint()}))):console.warn("physx-joint must be used within a physx-body")},remove(){this.joint&&(this.joint.release(),this.joint=null,this.bodyEl.components["physx-body"].rigidBody.wakeUp(),this.data.target.components["physx-body"].rigidBody.wakeUp&&this.data.target.components["physx-body"].rigidBody.wakeUp())},update(){if(this.joint&&(this.data.breakForce.x>=0&&this.data.breakForce.y>=0&&this.joint.setBreakForce(this.data.breakForce.x,this.data.breakForce.y),this.joint.setConstraintFlag(PhysX.PxConstraintFlag.eCOLLISION_ENABLED,this.data.collideWithTarget),!this.el.hasAttribute("phsyx-custom-constraint")&&"D6"===this.data.type))if(this.data.softFixed){this.joint.setMotion(PhysX.PxD6Axis.eX,PhysX.PxD6Motion.eFREE),this.joint.setMotion(PhysX.PxD6Axis.eY,PhysX.PxD6Motion.eFREE),this.joint.setMotion(PhysX.PxD6Axis.eZ,PhysX.PxD6Motion.eFREE),this.joint.setMotion(PhysX.PxD6Axis.eSWING1,PhysX.PxD6Motion.eFREE),this.joint.setMotion(PhysX.PxD6Axis.eSWING2,PhysX.PxD6Motion.eFREE),this.joint.setMotion(PhysX.PxD6Axis.eTWIST,PhysX.PxD6Motion.eFREE);let t=new PhysX.PxD6JointDrive;t.stiffness=1e3,t.damping=500,t.forceLimit=1e3,t.setAccelerationFlag(!1),this.joint.setDrive(PhysX.PxD6Drive.eX,t),this.joint.setDrive(PhysX.PxD6Drive.eY,t),this.joint.setDrive(PhysX.PxD6Drive.eZ,t),this.joint.setDrive(PhysX.PxD6Drive.eSLERP,t),this.joint.setDrivePosition({translation:{x:0,y:0,z:0},rotation:{w:1,x:0,y:0,z:0}},!0),this.joint.setDriveVelocity({x:0,y:0,z:0},{x:0,y:0,z:0},!0)}},getTransform(t){return Util.positionObject3DAtTarget(this.worldHelperParent,t.object3D,{scale:this.targetScale}),Util.positionObject3DAtTarget(this.worldHelper,this.el.object3D,{scale:this.targetScale}),PhysXUtil.matrixToTransform(this.worldHelper.matrix)},async createJoint(){await Util.whenComponentInitialized(this.bodyEl,"physx-body"),await Util.whenComponentInitialized(this.data.target,"physx-body"),await this.bodyEl.components["physx-body"].physxRegisteredPromise,await this.data.target.components["physx-body"].physxRegisteredPromise,this.joint&&(this.joint.release(),this.joint=null);let t=this.getTransform(this.bodyEl),e=this.getTransform(this.data.target);this.joint=PhysX[`Px${this.data.type}JointCreate`](this.system.physics,this.bodyEl.components["physx-body"].rigidBody,t,this.data.target.components["physx-body"].rigidBody,e),this.system.registerJoint(this.joint,this),this.update(),this.el.emit("physx-jointcreated",this.joint)}}),AFRAME.registerSystem("physx-contact-event",{init(){this.worldHelper=new THREE.Object3D,this.el.sceneEl.object3D.add(this.worldHelper)}}),AFRAME.registerComponent("physx-contact-event",{dependencies:["physx-body"],schema:{impulseThreshold:{default:.01},maxDistance:{default:10},maxDuration:{default:5},startDelay:{default:6e3},positionAtContact:{default:!1}},events:{contactbegin:function(t){if(this.el.sceneEl.time<this.data.startDelay)return;let e=this.eventDetail.positionWorld,i=(this.pool("cameraWorld",THREE.Vector3),t.detail.impulses),s=0;for(let t=0;t<i.size();++t)s+=i.get(t);if(s<this.data.impulseThreshold)return;e.set(0,0,0);let a=0;if(this.data.positionAtContact){for(let s=0;s<i.size();++s){a=i.get(s);let o=t.detail.points.get(s);e.x+=o.x*a,e.y+=o.y*a,e.z+=o.z*a}e.multiplyScalar(1/s),this.system.worldHelper.position.copy(e),Util.positionObject3DAtTarget(this.localHelper,this.system.worldHelper),this.eventDetail.position.copy(this.localHelper.position)}else e.set(0,0,0),this.eventDetail.position.set(0,0,0);this.eventDetail.impulse=s,this.eventDetail.contact=t.detail,this.el.emit("contactevent",this.eventDetail)}},init(){if(VARTISTE.Pool.init(this),this.eventDetail={impulse:0,positionWorld:new THREE.Vector3,position:new THREE.Vector3,contact:null},this.data.debug){let t=document.createElement("a-entity");t.setAttribute("geometry","primitive: sphere; radius: 0.1"),t.setAttribute("physx-no-collision","")}this.localHelper=new THREE.Object3D,this.el.object3D.add(this.localHelper),this.el.setAttribute("physx-body","emitCollisionEvents",!0)},remove(){this.el.object3D.remove(this.localHelper)}}),AFRAME.registerComponent("physx-contact-sound",{dependencies:["physx-contact-event"],schema:{src:{type:"string"},impulseThreshold:{default:.01},maxDistance:{default:10},maxDuration:{default:5},startDelay:{default:6e3},positionAtContact:{default:!1}},events:{contactevent:function(t){this.data.positionAtContact&&this.sound.object3D.position.copy(t.detail.position),this.sound.components.sound.stopSound(),this.sound.components.sound.playSound()}},init(){let t=document.createElement("a-entity");this.el.append(t),t.setAttribute("sound",{src:this.data.src}),this.sound=t,this.el.setAttribute("physx-body","emitCollisionEvents",!0)},update(t){this.el.setAttribute("physx-contact-event",this.data)}}),AFRAME.registerComponent("gltf-entities",{dependencies:["gltf-model"],schema:{setId:{default:!1},idPrefix:{default:""},autoPropogateGrab:{default:!0},copyAttributes:{type:"array"},allowedAttributes:{type:"array"}},events:{"model-loaded":function(t){this.setupEntities()}},init(){},setupEntities(){let t=this.el.getObject3D("mesh");t&&this.setupObject(t,this.el)},setupObject(t,e){if(t.userData["a-entity"]){let i=document.createElement("a-entity"),s=t.userData["a-entity"];if(i.innerHTML=s,i.innerHTML=`<a-entity ${i.innerText}></a-entity>`,i=i.children[0],this.data.allowedAttributes.length)for(let t of i.attributes)this.data.allowedAttributes.includes(t.name)||i.removeAttribute(t.name);this.data.setId&&t.name&&(i.id=`${this.data.idPrefix}${t.name}`);for(let t of this.data.copyAttributes)this.el.hasAttribute(t)&&i.setAttribute(t,this.el.getAttribute(t));this.data.autoPropogateGrab&&this.el.classList.contains("clickable")&&(i.setAttribute("propogate-grab",""),i.classList.add("clickable")),e.append(i),Util.whenLoaded(i,(()=>{i.setObject3D("mesh",t),t.updateMatrix(),Util.applyMatrix(t.matrix,i.object3D),t.matrix.identity(),Util.applyMatrix(t.matrix,t)})),e=i}for(let i of t.children)this.setupObject(i,e)}});